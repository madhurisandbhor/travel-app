{"version":3,"sources":["app/Theme.js","components/Header/HeaderLink.js","components/Header/index.js","app/InfoContext.js","components/Header/ItineraryDrawer.js","components/Header/Toolbar.js","containers/AppHeader/styles.js","containers/AppHeader/index.js","images/Asia.jpg","images/Africa.jpg","images/Antarctica.jpg","images/Europe.jpg","images/Insular Oceania.jpg","images/North America.jpg","images/South America.jpg","components/LoadingIndicator.js","components/TopSection/styles.js","components/TopSection/index.js","containers/Dashboard/styles.js","containers/Dashboard/index.js","hooks/useHttp.js","hooks/http.js","components/SelectMenu/index.js","containers/Continent/Cards/styles.js","containers/Continent/Cards/CountryInfoSection.js","containers/Continent/Cards/CityInfoSection.js","containers/Continent/SelectMenuCities.js","containers/Continent/styles.js","containers/Continent/Cards/ContinentInfoSection.js","containers/Continent/Map/MapInfoWindow.js","containers/Continent/Map/styles.js","containers/Continent/Map/index.js","containers/Continent/index.js","components/NotFoundPage.js","app/index.js","index.js"],"names":["theme","createTheme","palette","primary","light","main","dark","secondary","app","white","grey","yellow","red","blue","green","typography","fontFamily","htmlFontSize","overrides","MuiInputLabel","root","fontSize","MuiTextField","MuiInputBase","input","MuiSvgIcon","MuiTypography","body1","body2","styled","NavLink","props","NavBar","ul","NavItem","li","Header","HeaderLink","exact","to","reducer","info","newInfo","localStorage","removeItem","initialState","continentSelected","citiesAddedByUser","notificationToggle","localState","JSON","parse","getItem","InfoContext","React","createContext","InfoProvider","useReducer","setInfo","useEffect","setItem","stringify","Provider","value","children","Title","b","ButtonWrapper","div","Msg","useStyles","makeStyles","display","drawer","width","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","button","background","color","ItineraryDrawer","open","handleDrawerClose","onDeleteCity","onDeleteAllCities","classes","useContext","Drawer","className","variant","anchor","paper","IconButton","onClick","Divider","length","List","map","city","index","ListItem","ListItemText","name","selectedDate","event","id","Button","memo","ToolbarWrapper","borderRadius","backgroundColor","hide","position","right","customBadge","tooltip","Toolbar","handleDrawerOpen","rest","Tooltip","title","edge","clsx","Badge","anchorOrigin","vertical","horizontal","badge","wraper","minHeight","flexDirection","AppHeader","useState","setOpen","useCallback","cityName","infoArray","filter","Loader","Circle","i","LoadingIndicator","topSection","height","alignSelf","lineHeight","margin","fontWeight","letterSpacing","subText","TopSection","hidden","visibility","sliderContainer","gridTemplateColumns","gridAutoFlow","gridGap","card","border","borderBottomWidth","cursor","objectFit","transition","zIndex","transform","overflow","bottom","left","content","images","asia","africa","antarctica","europe","north_america","oceania","south_america","Dashboard","continentsList","setContinentsList","UpdatedcontinentsList","setUpdatedContinentsList","history","useHistory","url","query","data","setData","isLoading","setIsLoading","error","setError","fetchData","a","fetch","method","headers","body","res","json","console","log","useHttp","getContinentInfo","push","continents","listWithImages","continent","forEach","image","includes","split","toString","toLowerCase","img","Card","src","alt","httpReducer","currentState","action","type","loading","responseData","errorMsg","Error","httpState","dispatchHttp","fetchRequest","AutocompleteWrapper","withStyles","marginBottom","option","marginRight","Autocomplete","SelectMenu","list","onSelectChange","label","options","autoHighlight","getOptionLabel","renderInput","params","TextField","onChange","Wrapper","Grid3","Grid","Text","CountryInfoSection","countryInfo","displayMultipleValue","item","join","capital","population","currencies","languages","CityInfoSection","cityInfo","NoCityText","SelectMenuCities","countrySelected","setCurrentCity","cities","setCities","setCountryInfo","setCityInfo","countries","onCitySelect","selectedCity","citySelected","Object","keys","Container","Info","InfoText","MapSection","ContinentInfoSection","InfoBox","City","MoreOptions","MapInfoWindow","selected","onCloseClick","isCityAdded","setIsCityAdded","Date","toISOString","setSelectedDate","cityAdded","some","Popup","target","InputLabelProps","shrink","inputProps","min","updatedCity","locationSelected","MapRoot","MapContainer","DefaultIcon","L","icon","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","iconShadow","Marker","prototype","MapComponent","markers","setMarkerPosition","zoom","resetZoom","setSelected","setMap","lat","location","lng","long","center","setCenter","selectedLocation","setView","current","scrollWheelZoom","whenCreated","TileLayer","attribution","marker","eventHandlers","click","e","onMarkerClick","Continent","setCountries","setCountrySelected","setCitySelected","setMarkers","setZoom","level","onCountrySelect","selectedCountry","onSetCurrentCity","currentCity","Map","NotFound","App","StylesProvider","injectFirst","basename","process","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5348ed2.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: { light: \"\", main: \"#FF8BE3\", dark: \"#FF64E3\" },\r\n    secondary: { light: \"\", main: \"#0DDFFD\", dark: \"#00aec7\" },\r\n  },\r\n  app: {\r\n    white: \"#fff\",\r\n    grey: \"#dbdbdb\",\r\n    yellow: \"#ebb734\",\r\n    red: \"#e33030\",\r\n    blue: \"#3330e3\",\r\n    green: \"#1fab26\",\r\n  },\r\n  typography: {\r\n    fontFamily: `\"Gabriela\", serif`,\r\n    htmlFontSize: 10,\r\n  },\r\n  overrides: {\r\n    MuiInputLabel: {\r\n      root: {\r\n        fontSize: \"1.4rem\",\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      root: {\r\n        fontSize: \"1.4rem\",\r\n      },\r\n    },\r\n    MuiInputBase: {\r\n      input: {\r\n        fontSize: \"1.4rem\",\r\n      },\r\n    },\r\n    MuiSvgIcon: {\r\n      root: {\r\n        fontSize: \"2.4rem\",\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      body1: {\r\n        fontSize: \"1.4rem\",\r\n      },\r\n      body2: {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default styled(NavLink)`\r\n  display: inline-block;\r\n  padding: 0.5rem 2rem;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  outline: 0;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  color: ${(props) => props.theme.app.white};\r\n  fontfamily: \"Gabriela\", serif;\r\n  & > b {\r\n    color: ${(props) => props.theme.palette.primary.main};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HeaderLink from \"./HeaderLink\";\r\n\r\nconst NavBar = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  display: inline;\r\n`;\r\n\r\nconst Header = () => (\r\n  <NavBar>\r\n    <NavItem>\r\n      <HeaderLink exact to=\"/\">\r\n        Bon Voyage<b>!</b>\r\n      </HeaderLink>\r\n    </NavItem>\r\n  </NavBar>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nlet reducer = (info, newInfo) => {\r\n    if (newInfo === null) {\r\n        localStorage.removeItem(\"info\");\r\n        return initialState;\r\n    }\r\n    return { ...info, ...newInfo };\r\n};\r\n\r\nconst initialState = {\r\n    continentSelected: {},\r\n    citiesAddedByUser: [],\r\n    notificationToggle: false,\r\n};\r\n\r\nconst localState = JSON.parse(localStorage.getItem(\"info\"));\r\n\r\nconst InfoContext = React.createContext();\r\n\r\nfunction InfoProvider(props) {\r\n    const [info, setInfo] = useReducer(reducer, localState || initialState);\r\n\r\n    //whenever context info is updated it will update localstorage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"info\", JSON.stringify(info));\r\n    }, [info]);\r\n\r\n    return (\r\n        <InfoContext.Provider value={{ info, setInfo }}>\r\n            {props.children}\r\n        </InfoContext.Provider>\r\n    );\r\n}\r\n\r\nexport { InfoContext, InfoProvider };\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { InfoContext } from \"app/InfoContext\";\r\n\r\nconst Title = styled.b`\r\n  align-self: center;\r\n  color: ${(props) => props.theme.palette.primary.main};\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nconst Msg = styled.div`\r\n  padding: 2rem;\r\n  line-height: 1.6;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: \"30rem\",\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: \"30rem\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \".5rem\",\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  button: {\r\n    justifyContent: \"center\",\r\n    background: theme.palette.primary.main,\r\n    color: theme.app.white,\r\n    fontSize: \"1.1rem\",\r\n    \"&:hover\": {\r\n      background: theme.palette.secondary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ItineraryDrawer = ({\r\n  open,\r\n  handleDrawerClose,\r\n  onDeleteCity,\r\n  onDeleteAllCities,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { info } = useContext(InfoContext);\r\n  const citiesAddedByUser = info.citiesAddedByUser\r\n    ? info.citiesAddedByUser\r\n    : [];\r\n\r\n  //TODO : fix backdropclick\r\n  // const toggleDrawer = (event) => {\r\n  //   if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n  //     handleDrawerClose();\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"right\"\r\n      open={open}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      // ModalProps={{ onBackdropClick: toggleDrawer, onEscapeKeyDown: toggleDrawer }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n        <Title>Travel Itinerary</Title>\r\n      </div>\r\n      <Divider />\r\n      {citiesAddedByUser.length !== 0 && (\r\n        <>\r\n          <List>\r\n            {citiesAddedByUser.map((city, index) => (\r\n              <ListItem button key={city.id}>\r\n                <ListItemText primary={`Day ${index + 1}`} />\r\n                <ListItemText\r\n                  primary={city.name}\r\n                  secondary={city.selectedDate}\r\n                />\r\n                <IconButton onClick={(event) => onDeleteCity(city.name)}>\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <ButtonWrapper>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={onDeleteAllCities}\r\n            >\r\n              Remove all cities\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </>\r\n      )}\r\n      {citiesAddedByUser.length === 0 && (\r\n        <Msg>\r\n          <div>You have 0 cities added to your travel</div>\r\n          <div>Start exploring!!</div>\r\n        </Msg>\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default React.memo(ItineraryDrawer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ItineraryDrawer from \"./ItineraryDrawer\";\r\n\r\nconst ToolbarWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    borderRadius: \"0.5rem\",\r\n    padding: \"0.8rem\",\r\n    backgroundColor: \"rgb(0 0 0 / 26%)\",\r\n    \"&:hover\": {\r\n      color: theme.palette.secondary.main,\r\n      backgroundColor: \"rgb(0 0 0 / 50%)\",\r\n    },\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  open: {\r\n    position: \"absolute\",\r\n    right: \"2rem\",\r\n  },\r\n  customBadge: {\r\n    backgroundColor: theme.app.red,\r\n    color: \"white\",\r\n  },\r\n  tooltip: {\r\n    fontSize: \"1.2rem\",\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ notificationToggle, handleDrawerOpen, open, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ToolbarWrapper>\r\n      <Tooltip title=\"Travel Itinerary\" classes={{ tooltip: classes.tooltip }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          edge=\"end\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(\r\n            open && classes.hide,\r\n            !open && classes.open,\r\n            classes.button\r\n          )}\r\n        >\r\n          <Badge\r\n            variant=\"dot\"\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"left\",\r\n            }}\r\n            classes={{ badge: notificationToggle && classes.customBadge }}\r\n          >\r\n            <FlightTakeoffIcon />\r\n          </Badge>\r\n        </Button>\r\n      </Tooltip>\r\n      <ItineraryDrawer open={open} {...rest} />\r\n    </ToolbarWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Toolbar);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wraper: {\r\n    minHeight: \"5.5rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    color: theme.app.white,\r\n    background: \"linear-gradient(90deg, #0ddffd 0%, #ff8be3 100%)\",\r\n    fontFamily: '\"Gabriela\", serif',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext, useCallback, memo } from \"react\";\r\nimport Header from \"components/Header\";\r\nimport Toolbar from \"../../components/Header/Toolbar\";\r\nimport { InfoContext } from \"app/InfoContext\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst AppHeader = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { info, setInfo } = useContext(InfoContext);\r\n\r\n  const handleDrawerOpen = useCallback(() => {\r\n    setInfo({\r\n      ...info,\r\n      notificationToggle: false,\r\n    });\r\n    setOpen(true);\r\n  }, [info, setInfo]);\r\n\r\n  const handleDrawerClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const onDeleteCity = useCallback(\r\n    (cityName) => {\r\n      let infoArray = [...info.citiesAddedByUser];\r\n      infoArray = infoArray.filter((city) => city.name !== cityName);\r\n      setInfo({\r\n        ...info,\r\n        citiesAddedByUser: infoArray,\r\n      });\r\n    },\r\n    [info, setInfo]\r\n  );\r\n\r\n  const onDeleteAllCities = useCallback(() => {\r\n    setInfo({\r\n      ...info,\r\n      citiesAddedByUser: [],\r\n    });\r\n  }, [info, setInfo]);\r\n\r\n  return (\r\n    <header className={classes.wraper}>\r\n      <Header />\r\n      <Toolbar\r\n        open={open}\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        handleDrawerClose={handleDrawerClose}\r\n        notificationToggle={info.notificationToggle}\r\n        onDeleteCity={onDeleteCity}\r\n        onDeleteAllCities={onDeleteAllCities}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default memo(AppHeader);\r\n","export default __webpack_public_path__ + \"static/media/Asia.d04940cc.jpg\";","export default __webpack_public_path__ + \"static/media/Africa.a2f36494.jpg\";","export default __webpack_public_path__ + \"static/media/Antarctica.e8e72b2c.jpg\";","export default __webpack_public_path__ + \"static/media/Europe.e9d068ad.jpg\";","export default __webpack_public_path__ + \"static/media/Insular Oceania.ee13d913.jpg\";","export default __webpack_public_path__ + \"static/media/North America.41531507.jpg\";","export default __webpack_public_path__ + \"static/media/South America.a6485b21.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Loader = styled.div`\r\n   text-align :center;\r\n`;\r\n\r\nconst Circle = styled.i`\r\n   color: ${props => props.theme.app.white};\r\n`;\r\n\r\nconst LoadingIndicator = () => (\r\n    <Loader data-testid=\"loader\">\r\n        <Circle className=\"fas fa-circle-notch fa-2x fa-spin\"></Circle>\r\n    </Loader>\r\n);\r\n\r\nexport default LoadingIndicator;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topSection: {\r\n    height: \"10rem\",\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.app.white,\r\n    lineHeight: 1.6,\r\n    fontFamily: '\"Gabriela\", serif',\r\n    width: \"80%\",\r\n    margin: \"2rem 0\",\r\n  },\r\n  title: {\r\n    fontSize: \"2.4rem\",\r\n    fontWeight: \"600\",\r\n    letterSpacing: \"0.05rem\",\r\n  },\r\n  subText: {\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { memo } from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst TopSection = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.topSection}>\r\n      <div className={classes.title}>Explore the world with US!</div>\r\n      <div className={classes.subText}>\r\n        Locate your next travel destination and create your itinerary\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(TopSection);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"0 auto\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    background: \"linear-gradient(90deg, #0ddffd 0%, #ff8be3 100%)\",\r\n  },\r\n  hidden: {\r\n    visibility: \"hidden\",\r\n  },\r\n  sliderContainer: {\r\n    width: \"80%\",\r\n    height: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\",\r\n    gridAutoFlow: \"row\",\r\n    gridGap: \"2rem\",\r\n    margin: \"2rem auto\",\r\n    \"@media(max-width: 1024px) and (min-width: 768px)\": {\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n    },\r\n    \"@media(max-width: 768px)\": {\r\n      gridTemplateColumns: \"1fr\",\r\n    },\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    height: \"30rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    border: \"0.8rem solid white\",\r\n    position: \"relative\",\r\n    borderRadius: 0,\r\n    borderBottomWidth: '2.4rem',\r\n    background: 'lightgrey',\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n    \"& > img\": {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      objectFit: \"cover\",\r\n      transition: \"all 0.5s ease-in-out\",\r\n      zIndex: 0,\r\n      \"&:hover\": {\r\n        transform: \"scale(1.1)\",\r\n        overflow: \"hidden\",\r\n      },\r\n    },\r\n  },\r\n  name: {\r\n    zIndex: 99,\r\n    fontWeight: \"bold\",\r\n    color: theme.app.white,\r\n    fontSize: \"1.8rem\",\r\n    letterSpacing: \"0.1rem\",\r\n    position: \"absolute\",\r\n    bottom: \"1rem\",\r\n    left: \"2rem\",\r\n  },\r\n  content: {\r\n    background:\r\n      \"linear-gradient(to bottom, rgba(250, 250, 250, 0), black 100%)\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    height: \"20%\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport asia from \"images/Asia.jpg\";\r\nimport africa from \"images/Africa.jpg\";\r\nimport antarctica from \"images/Antarctica.jpg\";\r\nimport europe from \"images/Europe.jpg\";\r\nimport oceania from \"images/Insular Oceania.jpg\";\r\nimport north_america from \"images/North America.jpg\";\r\nimport south_america from \"images/South America.jpg\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\nimport { InfoContext } from \"app/InfoContext\";\r\nimport { useHttp } from \"hooks/useHttp\";\r\nimport TopSection from \"components/TopSection\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst images = [\r\n  asia,\r\n  africa,\r\n  antarctica,\r\n  europe,\r\n  north_america,\r\n  oceania,\r\n  south_america,\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [continentsList, setContinentsList] = useState([]);\r\n  const [UpdatedcontinentsList, setUpdatedContinentsList] = useState([]);\r\n  const { info, setInfo } = useContext(InfoContext);\r\n  const history = useHistory();\r\n  const url = \"https://api.everbase.co/graphql?apikey=your_key\";\r\n  const query = `{\r\n        continents {\r\n            id\r\n            name\r\n            population\r\n            countries {\r\n              id\r\n            }\r\n        }\r\n    }`;\r\n\r\n  const { isLoading, data, error } = useHttp(url, query);\r\n\r\n  const getContinentInfo = useCallback(\r\n    (continentSelected) => {\r\n      setInfo({\r\n        ...info,\r\n        continentSelected: continentSelected,\r\n      });\r\n      history.push(`/continents/${continentSelected.name}`);\r\n    },\r\n    [history, info, setInfo]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data !== null) {\r\n      setContinentsList(data.continents);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    //update list with respective images as images are not provided by backend\r\n    const tempList = [...continentsList];\r\n    const listWithImages = tempList.map((continent) => {\r\n      images.length > 0 &&\r\n        images.forEach((image) => {\r\n          if (\r\n            image.includes(\"/\") &&\r\n            image\r\n              .split(\"/\")[4]\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(continent.name.toLowerCase())\r\n          )\r\n            continent.img = image;\r\n        });\r\n      return continent;\r\n    });\r\n    setUpdatedContinentsList(listWithImages);\r\n  }, [continentsList]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopSection />\r\n      {isLoading && <LoadingIndicator />}\r\n      {error && <div>{error}</div>}\r\n      {!isLoading && (\r\n        <div className={classes.sliderContainer}>\r\n          {UpdatedcontinentsList.length > 0 &&\r\n            UpdatedcontinentsList.map((continent) => (\r\n              <Card\r\n                className={classes.card}\r\n                key={continent.id}\r\n                onClick={(event) => getContinentInfo(continent, event)}\r\n              >\r\n                <img src={continent.img} alt={continent.name} />\r\n                <div className={classes.name}>{continent.name}</div>\r\n                <div className={classes.content}></div>\r\n              </Card>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {};\r\n\r\nexport default Dashboard;\r\n","/**\r\n* This file is included for testing purpose with simplied custom hook, \r\n  as with useReducer it was givings errors to mock the custom hook\r\n*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useHttp = (url, query) => {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ query }),\r\n                })\r\n                let { data } = await res.json();\r\n                setData(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n                setError(error);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, [url, query]);\r\n\r\n    return { data, error, isLoading };\r\n};","import { useReducer, useEffect } from 'react';\r\n\r\nconst httpReducer = (currentState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND':\r\n            return { loading: true, error: null, responseData: null };\r\n        case 'RESPONSE':\r\n            return { ...currentState, loading: false, responseData: action.responseData };\r\n        case 'ERROR':\r\n            return { loading: false, error: action.errorMsg, responseData: null };\r\n        default: throw new Error(`Wrong action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nfunction useHttp(url, query) {\r\n    const [httpState, dispatchHttp] = useReducer(httpReducer, { loading: false, error: null, responseData: null });\r\n\r\n    useEffect(() => {\r\n        dispatchHttp({ type: 'SEND' });\r\n        const fetchRequest = async () => {\r\n            try {\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ query }),\r\n                })\r\n                let { data } = await res.json();\r\n                dispatchHttp({ type: 'RESPONSE', responseData: data });\r\n            } catch (err) {\r\n                console.log(err);\r\n                dispatchHttp({ type: 'ERROR', errorMsg: err });\r\n            }\r\n        };\r\n        fetchRequest();\r\n    }, [url, query]);\r\n\r\n    return {\r\n        isLoading: httpState.loading,\r\n        error: httpState.error,\r\n        data: httpState.responseData,\r\n    };\r\n};\r\n\r\nexport default useHttp;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport theme from 'app/Theme';\r\n\r\nconst AutocompleteWrapper = withStyles({\r\n    root: {\r\n        fontSize: '1.6rem',\r\n        marginBottom: '1.2rem',\r\n        width: '100%',\r\n        color: theme.palette.primary.dark,\r\n    },\r\n    option: {\r\n        fontSize: '1.5rem',\r\n        '& > span': {\r\n            marginRight: '1rem',\r\n            fontSize: '1.8rem',\r\n        },\r\n    },\r\n})(Autocomplete);\r\n\r\nconst SelectMenu = ({ type, list, onSelectChange }) => {\r\n    const label = `Choose a ${type}`;\r\n\r\n    return (\r\n        <AutocompleteWrapper\r\n            id=\"select-menu\"\r\n            options={list}\r\n            autoHighlight\r\n            getOptionLabel={(option) => option.name}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={label}\r\n                />\r\n            )}\r\n            onChange={(event, value) => onSelectChange(value)}\r\n        />\r\n    );\r\n}\r\n\r\nSelectMenu.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    list: PropTypes.array.isRequired,\r\n    onSelectChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(SelectMenu);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1.5rem;\r\n  padding: 2rem;\r\n  box-shadow: 0 0.7rem 3rem -1rem rgba(150, 170, 180, 0.5);\r\n  border-radius: 0.8rem;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin-bottom: 1rem;\r\n  color: ${(props) => props.theme.palette.primary.dark};\r\n  padding-bottom: 1rem;\r\n  border-bottom: 0.1rem solid black;\r\n`;\r\nexport const Grid3 = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(1, auto);\r\n  grid-gap: 3rem;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(2, auto);\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > span:first-child {\r\n    font-size: 1.2rem;\r\n    color: ${(props) => props.theme.palette.secondary.dark};\r\n  }\r\n  & > span:last-child {\r\n    font-weight: bold;\r\n    font-size: 1.4rem;\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n","import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, Wrapper, Text } from './styles'\r\n\r\nconst CountryInfoSection = ({ countryInfo }) => {\r\n  const displayMultipleValue = useCallback(\r\n    (data) => data && data.map((item) => item.name).join(', '),\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Grid>\r\n        <Text>\r\n          <span>Capital</span>\r\n          <span>\r\n            {countryInfo.capital ? countryInfo.capital.name : 'NA'}\r\n          </span>\r\n        </Text>\r\n        <Text>\r\n          <span>Population</span>\r\n          <span>{countryInfo.population}</span>\r\n        </Text>\r\n        <Text>\r\n          <span>Currencies</span>\r\n          <span>{displayMultipleValue(countryInfo.currencies)} </span>\r\n        </Text>\r\n        <Text>\r\n          <span>Languages</span>\r\n          <span>{displayMultipleValue(countryInfo.languages)}</span>\r\n        </Text>\r\n      </Grid>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nCountryInfoSection.propTypes = {\r\n  countryInfo: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default React.memo(CountryInfoSection)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Wrapper, Text } from './styles'\r\n\r\nconst CityInfoSection = ({ cityInfo }) => (\r\n  <Wrapper>\r\n    <Text>\r\n      <span>Population</span>\r\n      <span>{cityInfo.population}</span>\r\n    </Text>\r\n  </Wrapper>\r\n)\r\n\r\nCityInfoSection.propTypes = {\r\n  cityInfo: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default React.memo(CityInfoSection)\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\nimport useHttp from \"hooks/http\";\r\nimport SelectMenu from \"components/SelectMenu\";\r\nimport CountryInfoSection from \"./Cards/CountryInfoSection\";\r\nimport CityInfoSection from \"./Cards/CityInfoSection\";\r\n\r\nconst NoCityText = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst SelectMenuCities = ({ countrySelected, setCurrentCity }) => {\r\n  const [cities, setCities] = useState([]);\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [cityInfo, setCityInfo] = useState({});\r\n\r\n  const url = \"https://api.everbase.co/graphql?apikey=your_key\";\r\n  const query = `{\r\n        countries(where: {name: {eq: \"${countrySelected.name}\"}}) {\r\n            id\r\n            name\r\n            capital {\r\n                name\r\n            }\r\n            cities {\r\n                id\r\n                name\r\n                location {\r\n                  lat\r\n                  long\r\n                }\r\n                population\r\n            }\r\n            languages {\r\n                id\r\n                name\r\n            }\r\n            currencies {\r\n                id\r\n                name\r\n            }\r\n            population\r\n        } \r\n    }`;\r\n\r\n  const { isLoading, data, error } = useHttp(url, query);\r\n\r\n  useEffect(() => {\r\n    if (data !== null) {\r\n      setCities(data.countries[0].cities);\r\n      setCountryInfo(data.countries[0]);\r\n      setCityInfo(\"\");\r\n    }\r\n  }, [data]);\r\n\r\n  const onCitySelect = useCallback(\r\n    (selectedCity) => {\r\n      const citySelected = selectedCity ? selectedCity : {};\r\n      setCityInfo(citySelected);\r\n      setCurrentCity(citySelected);\r\n    },\r\n    [setCurrentCity]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingIndicator />}\r\n      {error && <div className=\"no-result-text\">No result!!!</div>}\r\n      {!isLoading && (\r\n        <>\r\n          {Object.keys(countryInfo).length !== 0 && (\r\n            <CountryInfoSection countryInfo={countryInfo}></CountryInfoSection>\r\n          )}\r\n          {cities.length > 0 && (\r\n            <SelectMenu\r\n              type=\"city\"\r\n              list={cities}\r\n              onSelectChange={onCitySelect}\r\n            />\r\n          )}\r\n          {cities.length === 0 && <NoCityText>No city available</NoCityText>}\r\n          {Object.keys(cityInfo).length !== 0 && (\r\n            <CityInfoSection cityInfo={cityInfo} />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nSelectMenuCities.propTypes = {\r\n  countrySelected: PropTypes.object.isRequired,\r\n  setCurrentCity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(SelectMenuCities);\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background: white;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  margin: 2rem;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  width: 40%;\r\n  height: 100%;\r\n  padding: 0 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: space-around;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nexport const InfoText = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  font-weight: bold;\r\n  width: 100%;\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const MapSection = styled.div`\r\n  width: 60%;\r\n  height: 100%;\r\n  display: flex;\r\n  padding: 0 1rem;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  & > p {\r\n    font-size: 1.4rem;\r\n    margin: 1rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Title, Grid3, Wrapper, Text } from './styles'\r\n\r\nconst ContinentInfoSection = ({ continentSelected }) => (\r\n  <Wrapper>\r\n    <Title>Geographical Information</Title>\r\n    <Grid3>\r\n      <Text>\r\n        <span>Continent </span>\r\n        <span>{continentSelected.name}</span>\r\n      </Text>\r\n      <Text>\r\n        <span>Population </span>\r\n        <span>{continentSelected.population}</span>\r\n      </Text>\r\n      <Text>\r\n        <span>Countries </span>\r\n        <span>\r\n          {continentSelected.countries && continentSelected.countries.length}\r\n        </span>\r\n      </Text>\r\n    </Grid3>\r\n  </Wrapper>\r\n)\r\n\r\nContinentInfoSection.propTypes = {\r\n  continentSelected: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default React.memo(ContinentInfoSection)\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { Popup } from \"react-leaflet\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { InfoContext } from \"app/InfoContext\";\r\n\r\nconst InfoBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-content: space-between;\r\n`;\r\n\r\nconst City = styled.b`\r\n  margin-bottom: 0.5rem;\r\n  font-size: 1.6rem;\r\n  color: ${(props) => props.theme.palette.secondary.main};\r\n`;\r\n\r\nconst MoreOptions = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nconst Button = withStyles((theme) => ({\r\n  root: {\r\n    fontSize: \"1.6rem\",\r\n    color: theme.palette.secondary.main,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    padding: \".2rem\",\r\n  },\r\n}))(IconButton);\r\n\r\nconst Text = withStyles((theme) => ({\r\n  root: {\r\n    margin: \"1rem 0 .5rem 0\",\r\n  },\r\n}))(TextField);\r\n\r\nconst MapInfoWindow = ({ selected, onCloseClick }) => {\r\n  const { info, setInfo } = useContext(InfoContext);\r\n\r\n  const [isCityAdded, setIsCityAdded] = useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(event.target.value);\r\n  };\r\n\r\n  const onAddCity = () => {\r\n    const updatedCity = {\r\n      ...selected,\r\n      locationSelected: true,\r\n      selectedDate: selectedDate,\r\n    };\r\n    setInfo({\r\n      ...info,\r\n      citiesAddedByUser: [...info.citiesAddedByUser, updatedCity],\r\n      notificationToggle: true,\r\n    });\r\n  };\r\n\r\n  const onDelete = () => {\r\n    let infoArray = [...info.citiesAddedByUser];\r\n    infoArray = infoArray.filter((city) => city.name !== selected.name);\r\n    setInfo({\r\n      ...info,\r\n      citiesAddedByUser: infoArray,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // update local storage after adding city\r\n    localStorage.setItem(\r\n      \"citiesAddedByUser\",\r\n      JSON.stringify(info.citiesAddedByUser)\r\n    );\r\n  }, [info]);\r\n\r\n  useEffect(() => {\r\n    // after adding update check icon and add/delete button\r\n    const citiesAddedByUser = info.citiesAddedByUser;\r\n    const cityAdded = citiesAddedByUser.some(\r\n      (city) => city.name === selected.name\r\n    );\r\n    setIsCityAdded(cityAdded);\r\n  }, [selected, setIsCityAdded, info]);\r\n\r\n  //TODO: change date option, when date is seleted then enable add button\r\n\r\n  return (\r\n    <Popup onCloseClick={onCloseClick}>\r\n      <InfoBox>\r\n        <City>{selected.name}</City>\r\n        {!isCityAdded && (\r\n          <>\r\n            <Text\r\n              id=\"date\"\r\n              label=\"Select date\"\r\n              type=\"date\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputProps={{\r\n                min: new Date().toISOString().split('T')[0],\r\n              }}\r\n            />\r\n            <Button aria-label=\"add city\" onClick={onAddCity}>\r\n              <AddCircleIcon />\r\n            </Button>\r\n          </>\r\n        )}\r\n        {isCityAdded && (\r\n          <MoreOptions>\r\n            <span>City is added</span>\r\n            <DoneIcon />\r\n            <Button aria-label=\"delete city\" onClick={onDelete}>\r\n              <DeleteIcon />\r\n            </Button>\r\n          </MoreOptions>\r\n        )}\r\n      </InfoBox>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nMapInfoWindow.propTypes = {\r\n  selected: PropTypes.object.isRequired,\r\n  onCloseClick: PropTypes.func,\r\n};\r\n\r\nexport default React.memo(MapInfoWindow);\r\n","import styled from \"styled-components\";\r\nimport { MapContainer } from \"react-leaflet\";\r\n\r\nconst MapRoot = styled(MapContainer)`\r\n  width: 100%;\r\n  height: 48rem;\r\n`;\r\n\r\nexport { MapRoot };\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport L from \"leaflet\";\r\nimport { TileLayer, Marker } from \"react-leaflet\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapInfoWindow from \"./MapInfoWindow\";\r\nimport { InfoContext } from \"app/InfoContext\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapRoot } from \"./styles\";\r\n\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst MapComponent = ({\r\n  countries,\r\n  countrySelected,\r\n  citySelected,\r\n  markers,\r\n  setMarkerPosition,\r\n  zoom,\r\n  resetZoom,\r\n}) => {\r\n  const { info } = useContext(InfoContext);\r\n  const [selected, setSelected] = useState(\"\");\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  const [center, setCenter] = useState({\r\n    lat: countries[0].location.lat,\r\n    lng: countries[0].location.long,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const selectedLocation =\r\n      Object.keys(citySelected).length !== 0 ? citySelected : countrySelected;\r\n    const citiesAddedByUser = info.citiesAddedByUser;\r\n\r\n    if (\r\n      Object.keys(citySelected).length !== 0 ||\r\n      Object.keys(countrySelected).length !== 0\r\n    ) {\r\n      if (Object.keys(citySelected).length !== 0) {\r\n        resetZoom(10); // adjust zoom level for City\r\n      } else {\r\n        resetZoom(5); // adjust zoom level for Country\r\n      }\r\n      setCenter({\r\n        lat: selectedLocation.location.lat,\r\n        lng: selectedLocation.location.long,\r\n      });\r\n\r\n      map.setView(\r\n        {\r\n          lat: selectedLocation.location.lat,\r\n          lng: selectedLocation.location.long,\r\n        },\r\n        5\r\n      );\r\n\r\n      const isCityAdded = citiesAddedByUser.some(\r\n        (city) => city.name === selectedLocation.name\r\n      );\r\n\r\n      setMarkerPosition([\r\n        {\r\n          lat: selectedLocation.location ? selectedLocation.location.lat : 0,\r\n          lng: selectedLocation.location ? selectedLocation.location.long : 0,\r\n          id: selectedLocation.id,\r\n          name: selectedLocation.name,\r\n          population: selectedLocation.population,\r\n          locationSelected: isCityAdded,\r\n        },\r\n      ]);\r\n    } else {\r\n      resetZoom(3);\r\n      countries.forEach((item) => {\r\n        const isCityAdded = citiesAddedByUser.some(\r\n          (city) => city.name === item.name\r\n        );\r\n\r\n        setMarkerPosition((current) => [\r\n          ...current,\r\n          {\r\n            lat: item.location ? item.location.lat : 0,\r\n            lng: item.location ? item.location.long : 0,\r\n            id: item.id,\r\n            name: item.name,\r\n            population: item.population,\r\n            locationSelected: isCityAdded,\r\n          },\r\n        ]);\r\n      });\r\n    }\r\n  }, [countries, countrySelected, citySelected, info, map, setMarkerPosition, resetZoom]);\r\n\r\n  const onMarkerClick = (marker, e) => {\r\n    setSelected(marker);\r\n  };\r\n\r\n  const onCloseClick = useCallback(() => {\r\n    setSelected(null);\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    if(!countrySelected.id && map){\r\n      map.setView(\r\n        {\r\n          lat: countries[0].location.lat,\r\n          lng: countries[0].location.long,\r\n        },\r\n        3\r\n      );\r\n    }\r\n  },[countrySelected, map, countries])\r\n\r\n  return (\r\n    <MapRoot\r\n      id=\"map\"\r\n      center={center}\r\n      zoom={zoom}\r\n      scrollWheelZoom={false}\r\n      whenCreated={setMap}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {markers.map((marker) => (\r\n        <Marker\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          eventHandlers={{\r\n            click: (event) => onMarkerClick(marker, event),\r\n          }}\r\n          key={marker.name}\r\n        >\r\n          <MapInfoWindow selected={selected} onCloseClick={onCloseClick} />\r\n        </Marker>\r\n      ))}\r\n    </MapRoot>\r\n  );\r\n};\r\n\r\nMapComponent.propTypes = {\r\n  countries: PropTypes.array.isRequired,\r\n  countrySelected: PropTypes.object,\r\n  citySelected: PropTypes.object,\r\n  markers: PropTypes.array,\r\n  setMarkerPosition: PropTypes.func,\r\n  zoom: PropTypes.number,\r\n  resetZoom: PropTypes.func,\r\n};\r\n\r\nexport default React.memo(MapComponent);\r\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { InfoContext } from \"app/InfoContext\";\r\nimport LoadingIndicator from \"components/LoadingIndicator\";\r\nimport useHttp from \"hooks/http\";\r\nimport SelectMenu from \"components/SelectMenu\";\r\nimport SelectMenuCities from \"./SelectMenuCities\";\r\nimport Wrapper from \"./styles\";\r\nimport ContinentInfoSection from \"./Cards/ContinentInfoSection\";\r\nimport MapContainer from \"./Map\";\r\nimport { Container, MapSection, Info, InfoText } from \"./styles\";\r\n\r\nconst Continent = () => {\r\n  const { info } = useContext(InfoContext);\r\n  const [countries, setCountries] = useState([]);\r\n  const continentSelected = info.continentSelected;\r\n  const [countrySelected, setCountrySelected] = useState({});\r\n  const [citySelected, setCitySelected] = useState({});\r\n  const [markers, setMarkers] = useState([]);\r\n  const [zoom, setZoom] = useState(3);\r\n\r\n  const url = \"https://api.everbase.co/graphql?apikey=your_key\";\r\n  const query = `{\r\n        continents(where: {name: {eq: \"${continentSelected.name}\"}}) {\r\n            id \r\n            name \r\n            population\r\n            countries {\r\n                id\r\n                name\r\n                location {\r\n                    lat\r\n                    long\r\n                }\r\n                population\r\n            }\r\n        }\r\n    }`;\r\n\r\n  const { isLoading, data, error } = useHttp(url, query);\r\n\r\n  useEffect(() => {\r\n    if (data !== null) {\r\n      setCountries(data.continents[0].countries);\r\n    }\r\n  }, [data]);\r\n\r\n  const resetZoom = useCallback((level) => {\r\n    setZoom(level);\r\n  }, []);\r\n\r\n  const onCountrySelect = useCallback(\r\n    (selectedCountry) => {\r\n      setMarkers([]);\r\n      resetZoom(3);\r\n      const countrySelected = selectedCountry ? selectedCountry : {};\r\n      setCountrySelected(countrySelected);\r\n      setCitySelected({});\r\n    },\r\n    [resetZoom]\r\n  );\r\n\r\n  const onSetCurrentCity = useCallback(\r\n    (currentCity) => {\r\n      setMarkers([]);\r\n      resetZoom(5);\r\n      setCitySelected(currentCity);\r\n    },\r\n    [resetZoom]\r\n  );\r\n\r\n  const setMarkerPosition = useCallback((position) => {\r\n    setMarkers(position);\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && <LoadingIndicator />}\r\n      {error && <div className=\"no-result-text\">No result!!!</div>}\r\n      {!isLoading && (\r\n        <Container>\r\n          <Info>\r\n            <ContinentInfoSection continentSelected={continentSelected} />\r\n            {countries.length > 0 && (\r\n              <>\r\n                <InfoText>Please choose your destination to explore</InfoText>\r\n                <SelectMenu\r\n                  type=\"country\"\r\n                  list={countries}\r\n                  onSelectChange={onCountrySelect}\r\n                />\r\n                {Object.keys(countrySelected).length !== 0 && (\r\n                  <SelectMenuCities\r\n                    countrySelected={countrySelected}\r\n                    setCurrentCity={onSetCurrentCity}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </Info>\r\n          {countries.length > 0 && (\r\n            <MapSection>\r\n              <p>\r\n                Click the blue marker on map to add city to your travel plan.\r\n              </p>\r\n              <MapContainer\r\n                countries={countries}\r\n                countrySelected={countrySelected}\r\n                citySelected={citySelected}\r\n                markers={markers}\r\n                setMarkerPosition={setMarkerPosition}\r\n                zoom={zoom}\r\n                resetZoom={resetZoom}\r\n              />\r\n            </MapSection>\r\n          )}\r\n          {countries.length === 0 && (\r\n            <MapSection>Map is temporarily not available</MapSection>\r\n          )}\r\n        </Container>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Continent;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      Page not found!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport {\r\n  ThemeProvider as MuiThemeProvider,\r\n  StylesProvider,\r\n} from '@material-ui/styles';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './Theme';\r\nimport AppHeader from 'containers/AppHeader';\r\nimport Dashboard from 'containers/Dashboard';\r\nimport Continent from 'containers/Continent';\r\nimport NotFound from 'components/NotFoundPage';\r\nimport { InfoProvider } from './InfoContext';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <MuiThemeProvider theme={theme}>\r\n        <ThemeProvider theme={theme}>\r\n          <InfoProvider>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n              <div className=\"app\">\r\n                <AppHeader />\r\n                <main className=\"app-body\">\r\n                  <Switch>\r\n                    <Route exact path='/' component={Dashboard} />\r\n                    <Route path='/continents/:continent' component={Continent} />\r\n                    <Route path='' component={NotFound} />\r\n                  </Switch>\r\n                </main>\r\n              </div>\r\n            </Router>\r\n          </InfoProvider>\r\n        </ThemeProvider>\r\n      </MuiThemeProvider>\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}